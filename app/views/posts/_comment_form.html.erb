<script>
    function clearField(theText,divClass) {
        if (theText.value == theText.defaultValue) {
            theText.value = "";
        }
        /* TODO: Esto es una chapuza, Lo logico es que con esa veriable theText que es el objeto Value de cada field, pueda deducir su clase padre y ahí cambiar los valores. */
        if (divClass == ".name_field input") {
            $(".name_field input").css('color', 'black').css('font-style','normal');
        }
        else if (divClass == ".web_page_field input") {
            $(".web_page_field input").css('color', 'black').css('font-style', 'normal');
        }
        else {
            $(".comment_field textarea").css('color', 'black').css('font-style', 'normal');
        }
    }
</script>

<h3>
  Introduce un comentario:
</h3>

<%- #esto es un anchor, como un bookmark dentro de una pagina  -%>
<a name="comment_form"></a>


<%- # Opciones para loguearse con otros servicios o para introducir comentario como usuario anonimo  -%>


<% if signed_in? %>
    <div class = "logged_with"> You are signed in with <b><%= current_user.authorization.provider %></b> (<%=link_to "Sign out", {:controller => 'sessions', :action => 'destroy', :post_id => post}, :method => :post %>), leave your answer below: </div>
<% else %>
    <%- # TODO: esto se tiene que abrir en una ventana nueva  -%>
    <div class="providers_buttons">
      <div class="autenticate_con"> Autenticate con:</div>
      <div class="provider_button"> <%= link_to image_tag("facebook_button.png", :width => "30x30"), '/auth/facebook' %></div>
      <div class="provider_button"> <%= link_to image_tag("twitter_button.png", :width => "30x30"), '/auth/twitter' %></div>
      <div class="provider_button"> <%= link_to image_tag("linkedin_button.png", :width => "30x30"), '/auth/linked_in' %></div>
    </div>
<% end %>



<%- # Este formulario envia al controlador de comments los siguientes parametros para crear un objeto tipo comment (aunque estamos en una vista perteneciente a posts form_for envia el formulario a la función create dentro del controlador de comments)):  -%>
<%- # "comment"=>{"post_id"=>"1", "user_name"=>"juanito", "web_page"=>"pepito", "contenido"=>"una chorrada"}, "commit"=>"Post Comment"}   -%>

<%= form_for(@comment, :remote => true, :html => {:id => "comment_form_fields"}) do |f| %>
    <% if @comment.errors.any? %>
        <div id="error_explanation">
          <h2><%= pluralize(@comment.errors.count, "error") %> prohibited this comment from being saved:</h2>

          <ul>
            <% @comment.errors.full_messages.each do |msg| %>
                <li><%= msg %></li>
            <% end %>
          </ul>
        </div>
    <% end %>

    <%- # Gracias al parametro value le paso un valor concreto al hidden field.. de forma que va a recibir el parametro :post_id = una_id_de_un_post  -%>
    <%= f.hidden_field :post_id, :value => post %>

    <%- # TODO: caso en el que un usuario se autentica para dejar un comentario -%>
    <% if signed_in? %>
        <%= f.hidden_field :user_id, :value => current_user.id %>
    <% end %>

    <% if not signed_in? %>
        <div class="name_field">
          <%= f.label :name%>:&nbsp;&nbsp;&nbsp;&nbsp;
          <%= f.text_field :user_name, :value => "(Required)", :onclick => 'clearField(this,".name_field input");' %>
        </div>
    <% end %>

    <% if not signed_in? %>
        <div class="web_page_field">
          <%= f.label :web_page %>:&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size:14px;">http://</span>
          <%= f.text_field :web_page, :value => "(Optional)", :onclick => 'clearField(this,".web_page_field input");' %>
        </div>
    <% end %>

    <div class="comment_field">
      <%= f.text_area :contenido, :value => "Write here your comment.", :onclick => 'clearField(this,".comment_field textarea");' %>
    </div>

    <div class="submit_button">
      <%= f.submit "Post Comment" %>
    </div>

<% end %>